spring.application.name=my-blog-2

server.port=80
spring.thymeleaf.cache=false

spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

spring.datasource.url=jdbc:mariadb://localhost:3306/bootex

spring.datasource.username=yohan

spring.datasource.password=1234

spring.servlet.multipart.max-request-size = 500MB
spring.servlet.multipart.max-file-size = 100MB

jwt.expirationMs=3600000

jwt.secret = VlwEyVBsYt9V7zq57TejMnVUyzblYcfPQye08f7MGVA9XkHa


#여긴주석...

spring.jpa.show-sql=true

#아래는 프로젝트 실행시에 자동으로 DDL 생성여부 결정..create 은 매번 생성, update 는 변경이 필요시 alter, 없는 경우 create 됨.\

spring.jpa.hibernate.ddl-auto=update

#실제 JPA 구현체인 Hibernate 가 동작하면서 발생하는 SQL 출력하는 속성

spring.jpa.properties.hibernate.format_sql=true

#JPA 처리시 발생하는 SQL을 보여줄지 여부 속성

spring.jpa.properties.hibernate.show-sql=true

#바인딩되는 파라미터 값 출력

logging.level.org.hibernate.type.descriptor.sql=trace

spring.jpa.open-in-view=true

logging.level.web=debug

logging.level.org.hibernate.SQL=DEBUG

logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#이 가운데 parameters={masked} 가 거슬렸다.

#이 테스트에서는 쿼리스트링으로 파라미터가 왔기 때문에 보이긴 하지만,

#POST로 전송했을 경우 확인되지 않을 것이기 때문이다.

spring.mvc.log-request-details=true

spring.jpa.properties.hibernate.highlight_sql=true

spring.jpa.properties.hibernate.use_sql_comments=true

com.avi6.upload.path=D:/react_work/my-blog/public/images




